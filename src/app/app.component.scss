@import '@angular/cdk/overlay-prebuilt.css';
@import '@angular/cdk/a11y-prebuilt.css';

@media (max-width: 768px) {
	.greetings {
		margin: 0 4% !important;
		font-size: 12px !important;
		line-height: 20px !important;
	}
}

@media (min-width: 769px) and (max-width: 1800px) {
	.greetings {
		margin: 0 20% !important;
	}
}

@media (min-width: 1801px) {
	.greetings {
		margin: 0 35% !important;
	}
}

.color-primary {
	color: #813d7e !important;
}

nx-icon {
	color: var(--interactive-primary, #27abd6);
	vertical-align: middle;
	cursor: pointer;
}

nx-icon:hover {
	color: var(--hover-primary, #3bb4db);
}

nx-icon.cdk-mouse-focused {
	outline: none;
}

.stage {
	background: rgba(142, 11, 138, 0.2);
}

.container {
	display: flex;
	align-items: center;
	background-color: '#3e213a9' !important;
	justify-content: center;
	height: 100vh;
}

// ANIMATION
$image: url('/assets/images/sofia_and_dimi.jpeg');
body {
	margin: auto;
	font-family: -apple-system, BlinkMacSystemFont, sans-serif;
	overflow: auto;
	background: linear-gradient(315deg, rgb(25, 11, 149) 3%, rgba(60, 132, 206, 1) 38%, rgba(48, 238, 226, 1) 68%, rgb(90, 25, 255) 98%);
	animation: gradient 15s ease infinite;
	background-size: 400% 400%;
	background-attachment: fixed;
}

@keyframes gradient {
	0% {
		background-position: 0% 0%;
	}
	50% {
		background-position: 100% 100%;
	}
	100% {
		background-position: 0% 0%;
	}
}

.wave {
	background: rgba(142, 11, 138, 0.1);
	border-radius: 1000% 1000% 0 0;
	position: fixed;
	width: 200%;
	height: 12em;
	animation: wave 10s -3s linear infinite;
	transform: translate3d(0, 0, 0);
	opacity: 0.8;
	bottom: 0;
	left: 0;
	z-index: -1;
}

.wave:nth-of-type(2) {
	bottom: -1.25em;
	animation: wave 18s linear reverse infinite;
	opacity: 0.8;
}

.wave:nth-of-type(3) {
	bottom: -2.5em;
	animation: wave 20s -1s reverse infinite;
	opacity: 0.9;
}

@keyframes wave {
	2% {
		transform: translateX(1);
	}

	25% {
		transform: translateX(-25%);
	}

	50% {
		transform: translateX(-50%);
	}

	75% {
		transform: translateX(-25%);
	}

	100% {
		transform: translateX(1);
	}
}

// BUBBLES

$bubble-count: 100;
$sway-type: 'sway-left-to-right', 'sway-right-to-left';

@function random_range($min, $max) {
	$rand: random();
	$random_range: $min + floor($rand * (($max - $min) + 1));
	@return $random_range;
}

@function sample($list) {
	@return nth($list, random(length($list)));
}

.bubbles {
	position: relative;
	width: 100%;
	height: 100vh;
	overflow: hidden;
}

.bubble {
	position: absolute;
	left: var(--bubble-left-offset);
	bottom: -5%;
	display: block;
	width: var(--bubble-radius);
	height: var(--bubble-radius);
	border-radius: 50%;
	animation: float-up var(--bubble-float-duration) var(--bubble-float-delay) ease-in infinite;

	&::before {
		position: absolute;
		content: '';
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: hsla(184, 54%, 83%, 0.104);
		border-radius: inherit;
		animation: var(--bubble-sway-type) var(--bubble-sway-duration) var(--bubble-sway-delay) ease-in-out alternate infinite;
	}

	@for $i from 0 through $bubble-count {
		&:nth-child(#{$i}) {
			--bubble-left-offset: #{random_range(0vw, 100vw)};
			--bubble-radius: #{random_range(1vw, 10vw)};
			--bubble-float-duration: #{random_range(6s, 12s)};
			--bubble-sway-duration: #{random_range(4s, 6s)};
			--bubble-float-delay: #{random_range(0s, 4s)};
			--bubble-sway-delay: #{random_range(0s, 4s)};
			--bubble-sway-type: #{sample($sway-type)};
		}
	}
}

@keyframes float-up {
	to {
		transform: translateY(-175vh);
	}
}

@keyframes sway-left-to-right {
	from {
		transform: translateX(-100%);
	}

	to {
		transform: translateX(100%);
	}
}

@keyframes sway-right-to-left {
	from {
		transform: translateX(100%);
	}

	to {
		transform: translateX(-100%);
	}
}
